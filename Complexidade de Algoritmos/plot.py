import pandas as pd
import matplotlib.pyplot as plt

# Carregar os dados corretamente, ignorando cabe√ßalhos desnecess√°rios
df = pd.read_csv("dados.csv", skiprows=1, names=["n", "Recursivo", "Iterativo", "Formula"])

# Converter colunas para n√∫meros
df["n"] = pd.to_numeric(df["n"], errors="coerce")
df["Recursivo"] = pd.to_numeric(df["Recursivo"], errors="coerce")
df["Iterativo"] = pd.to_numeric(df["Iterativo"], errors="coerce")
df["Formula"] = pd.to_numeric(df["Formula"], errors="coerce")

# Fun√ß√£o para gerar gr√°ficos individuais
def gerar_grafico(coluna, titulo, nome_arquivo, cor, estilo):
    plt.figure(figsize=(10, 5))
    plt.plot(df["n"], df[coluna], estilo, label=coluna, color=cor)
    plt.xlabel("Valor de n")
    plt.ylabel("Tempo m√©dio (segundos)")
    plt.title(titulo)
    plt.legend()
    plt.grid()
    plt.savefig(nome_arquivo)
    print(f"‚úÖ Gr√°fico '{nome_arquivo}' gerado com sucesso!")

# Gerar gr√°ficos individuais para cada vers√£o
gerar_grafico("Recursivo", "Algoritmo Otimizado 1 ‚Äì Manuten√ß√£o da Recurs√£o", "grafico_recursivo.png", "blue", "o-")
gerar_grafico("Iterativo", "Algoritmo Otimizado 2 ‚Äì Elimina√ß√£o da Recurs√£o", "grafico_iterativo.png", "green", "s-")
gerar_grafico("Formula", "Algoritmo Otimizado 3 ‚Äì F√≥rmula Fechada", "grafico_formula.png", "red", "x-")

print("üü¢ Processo conclu√≠do! Todos os gr√°ficos foram gerados corretamente.")